// Generated by gencpp from file kuka_cv/RequestCanvas.msg
// DO NOT EDIT!


#ifndef KUKA_CV_MESSAGE_REQUESTCANVAS_H
#define KUKA_CV_MESSAGE_REQUESTCANVAS_H

#include <ros/service_traits.h>


#include <kuka_cv/RequestCanvasRequest.h>
#include <kuka_cv/RequestCanvasResponse.h>


namespace kuka_cv
{

struct RequestCanvas
{

typedef RequestCanvasRequest Request;
typedef RequestCanvasResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RequestCanvas
} // namespace kuka_cv


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kuka_cv::RequestCanvas > {
  static const char* value()
  {
    return "61ebd0c96b0b69529e9c2ca2b5245265";
  }

  static const char* value(const ::kuka_cv::RequestCanvas&) { return value(); }
};

template<>
struct DataType< ::kuka_cv::RequestCanvas > {
  static const char* value()
  {
    return "kuka_cv/RequestCanvas";
  }

  static const char* value(const ::kuka_cv::RequestCanvas&) { return value(); }
};


// service_traits::MD5Sum< ::kuka_cv::RequestCanvasRequest> should match
// service_traits::MD5Sum< ::kuka_cv::RequestCanvas >
template<>
struct MD5Sum< ::kuka_cv::RequestCanvasRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kuka_cv::RequestCanvas >::value();
  }
  static const char* value(const ::kuka_cv::RequestCanvasRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kuka_cv::RequestCanvasRequest> should match
// service_traits::DataType< ::kuka_cv::RequestCanvas >
template<>
struct DataType< ::kuka_cv::RequestCanvasRequest>
{
  static const char* value()
  {
    return DataType< ::kuka_cv::RequestCanvas >::value();
  }
  static const char* value(const ::kuka_cv::RequestCanvasRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kuka_cv::RequestCanvasResponse> should match
// service_traits::MD5Sum< ::kuka_cv::RequestCanvas >
template<>
struct MD5Sum< ::kuka_cv::RequestCanvasResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kuka_cv::RequestCanvas >::value();
  }
  static const char* value(const ::kuka_cv::RequestCanvasResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kuka_cv::RequestCanvasResponse> should match
// service_traits::DataType< ::kuka_cv::RequestCanvas >
template<>
struct DataType< ::kuka_cv::RequestCanvasResponse>
{
  static const char* value()
  {
    return DataType< ::kuka_cv::RequestCanvas >::value();
  }
  static const char* value(const ::kuka_cv::RequestCanvasResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KUKA_CV_MESSAGE_REQUESTCANVAS_H
